stages:
- stage: Build
  jobs:
  - job: Build_And_Package
    displayName: Build and package artifacts
    pool:
      name: Default
      demands:
      - msbuild
      - vstest

    variables:
      AssemblyVersion: '1.0'
      Solution: 'src/TestWebApp.sln'
      WebProject: 'src/TestWebApp/TestWebApp.csproj'
      BuildPlatform: 'Any CPU'
      BuildPlatformProject: 'AnyCPU'
      BuildConfiguration: 'Release'
      SkipTests: false

    steps:
    - task: GitVersion@1
      displayName: 'GitVersion '
      inputs:
        BuildNamePrefix: Multistage Pipeline

    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(Solution)'

    - task: VSBuild@1
      displayName: "build with visual studio"
      inputs:
        solution: $(Solution)
        configuration: '$(BuildConfiguration)'
        platform: '$(BuildPlatform)'

    - task: VSTest@2
      displayName: 'Test Assemblies'
      inputs:
        testAssemblyVer2: "**\\$(BuildConfiguration)\\*test*.dll"
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'
      continueOnError: true

    - task: FileTransform@1
      displayName: 'File Transform: '
      inputs:
        folderPath: src/TestWebApp/
        enableXmlTransform: true
        xmlTransformationRules: '-transform web.$(BuildConfiguration).config -xml web.config'
        fileType: xml

    - task: MSBuild@1
      displayName: 'publish web project'
      inputs:
        solution: '$(WebProject)'
        platform: '$(BuildPlatformProject)'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:OutDir="." /p:Configuration=$(BuildConfiguration)'

    - task: CopyFiles@2
      displayName: 'Copy published web app to: $(Build.ArtifactStagingDirectory)/WebApp'
      inputs:
        SourceFolder: 'src/TestWebApp/_PublishedWebsites/TestWebApp'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/WebApp'

    - task: CopyFiles@2
      displayName: 'Copy SQL DACPAC: $(Build.ArtifactStagingDirectory)/Sql'
      inputs:
        SourceFolder: 'src/TestWebApp.SqlDatabase/bin/$(BuildConfiguration)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/Sql'

    - task: PublishSymbols@2
      displayName: 'Publish symbols path'
      inputs:
        SearchPattern: '**\bin\**\*.pdb'
        PublishSymbols: false
      continueOnError: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish WebApp Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/WebApp'
        ArtifactName: WebApp
      condition: succeededOrFailed()

    - task: PublishBuildArtifacts@1
      displayName: 'Publish SQL Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/Sql'
        ArtifactName: Sql
      condition: succeededOrFailed()

########################################################
# This starts deploy stage
########################################################
- stage: Deploy
  jobs:
    # track deployments on the environment
  - deployment: DeployWeb
    pool:
      vmImage: 'Ubuntu-16.04'
    # creates an environment if it doesnâ€™t exist
    environment: 'smarthotel-dev'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment

  
